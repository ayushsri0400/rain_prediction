weathernew <- read.csv("D:/thesis/waste data set/weathernew.csv")
View(weathernew)
setwd("D:/thesis/waste data set")
setwd("D:/thesis/waste data set")
str(weathernew)
weathernew$Date = NULL
weathernew$WindDir = NULL
summary(weathernew$Location)
summary(weathernew$RainTomorrow)
weathernew$RainTomorrow[is.na(weathernew$RainTomorrow)] = 'Yes'
summary(weathernew$RainTomorrow)
weathernew$MaxTemp[is.na(weathernew$MaxTemp)]<-mean(weathernew$MaxTemp[!is.na(weathernew$MaxTemp)])
summary(weathernew$MaxTemp)
weathernew$MinTemp[is.na(weathernew$MinTemp)] = mean(weathernew$MinTemp[!is.na(weathernew$MinTemp)])
summary(weathernew$MinTemp)
weathernew$Rainfall[is.na(weathernew$Rainfall)] = mean(weathernew$Rainfall[!is.na(weathernew$Rainfall)])
summary(weathernew$Rainfall)
weathernew$WindSpeed = NULL
weathernew$Humidity[is.na(weathernew$Humidity)] = mean(weathernew$Humidity[!is.na(weathernew$Humidity)])
summary(weathernew$Humidity)
weathernew$Pressure[is.na(weathernew$Pressure)] = mean(weathernew$Pressure[!is.na(weathernew$Pressure)])
weathernew$Cloud[is.na(weathernew$Cloud)] = mean(weathernew$Cloud[!is.na(weathernew$Cloud)])
summary(weathernew)
str(weathernew)
reg = weathernew
kmean = weathernew
naive = weathernew
#regression
cor(regression$Rainfall, reg$RainTomorrow)
cor(reg$MaxTemp, reg$Rainfall)
cor(reg$\, reg$Rainfall)
cor(reg$Humidity, reg$Rainfall)
cor(reg$Pressure, reg$Rainfall)
cor(reg$Cloud, reg$Rainfall)
avg = mean(reg$Rainfall)
abline(h = avg)
plot(Humidity~Rainfall, data = regression)
plot(Humidity~Rainfall, data = reg)
plot(Rainfall~cloud, data = reg)
plot(Rainfall~Cloud, data = reg)
plot(Rainfall~Humidity, data = reg)
plot(Rainfall~Cloud, data = reg)
abline(h = avg)
model = lm(Rainfall~Cloud, data = reg)
abline(model,col = "yellow")
normalize <- function(x) {
+     return((x-min(x)) / (max(x)-min(x)))}
plot(model)
View(reg)
new = as.data.frame(lapply(reg[,c(2,3,4,5,6,7)],normalize))
View(new)
result = kmeans(kmean,2)
result = kmeans(new,2)
View(kmean)
table(kmean$RainTomorrow,result$cluster)
plot(kmean[c("Rainfall","Cloud")],col = kmean$RainTomorrow)
plot(kmean[c("Cloud","Rainfall")],col = kmean$RainTomorrow)
#naivebayees
str(naive)
library(naivebayes)
library(dplyr)
library(ggplot2)
library(psych)
new$Rainfall = as.factor(weathernew$Rainfall)
xtabs(~Rainfall+RainTomorrow, data = new)
xtabs(~Rainfall+RainTomorrow, data = naive)
pairs.panels(new[-1])
new %>%
ggplot(aes(x=RainTomorrow,y=Humidity, fill=RainTomorrow)) +
geom_boxplot()+
ggtitle("box plot")
naive %>%
ggplot(aes(x=RainTomorrow,y=Humidity, fill=RainTomorrow)) +
geom_boxplot()+
ggtitle("box plot")
naive%>%
ggplot(aes(x= Humidity,fill=RainTomorrow))+
geom_density(alpha=0.8,color="black")+
ggtitle("desity plot")
set.seed(1111)
ind = sample(2,nrow(naive),replace = T,prob = c(0.8.0.2))
new1 = naive
str(naive)
ind = sample(2,nrow(naive),replace = T,prob = c(0.8,0.2))
train = naive[ind==1]
train = naive[ind==1,]
test = naive[ind==2,]
model = naive_bayes(~RainTomorrow~.,data = train)
model = naive_bayes(RainTomorrow~.,data = train)
model
train%>%
filter(RainTomorrow="0")%>%
summarize(mean(Humidity),sd(Humidity))
plot(model)
train%>%
filter(RainTomorrow=="0")%>%
summarize(mean(Humidity),sd(Humidity))
plot(model)
p = predict(model,train,type = 'prob')
head(cbind(p,train))
p1 = (model,train)
p1 = (model~train)
(tab1 = table(p1,train$RainTomorrow))
p1 = (model,train)
p1 = (model~train)
View(normalize)
plot(model)
p = (model,train)
(tab1 = table(p,train$RainTomorrow))
str(naive)
naive$Rainfall = as.factor(naive$Rainfall)
(tab1 = table(p,train$RainTomorrow))
p = predict(model,train,type = 'prob')
(tab1 = table(p,train$RainTomorrow))
(tab1 = table(p1,train$RainTomorrow))
p1 = predict(model,train)
(tab1 = table(p1,train$RainTomorrow))
View(kmean)
plot(kmean[c("Rainfall","Cloud")],col = kmean$RainTomorrow)
plot(kmean[c("Humidity","Rainfall")],col = kmean$RainTomorrow)
plot(kmean[c("Humidity","Rainfall","Cloud","MaxTemp")],col = kmean$RainTomorrow)
View(naive)
plot(p)
plot(p, col = "RainTomorrow")
plot(p, col = "naive$RainTomorrow")
plot(p1)
plot(p1, data = weathernew)
